
// remove Firefox number spinner:
input[type="number"] {
    -moz-appearance: textfield;
}

// remove Chrome number spinner:
input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

button, input, select, .selectWrapper, textarea {
     background: #fff;
    color: #212121;
    border: 0;
}

input:not(:focus):valid {
  border: 1px solid green;
}

// select dropdowns --------------------------------
// http://jsbin.com/juvixufu/10/edit?html,output
.selectWrapper {
    position: relative;
    display: block;
    margin-top: 0.5em;
    overflow: hidden;
    width: 100%;
    max-width: 100%;


 select {
    /* Make sure the select is wider than the container so we can clip the arrow */
    cursor: pointer;
    width: 110%;
    max-width: 110%;
    min-width: 110%;
    /* Remove select styling */
    
    appearance: none;
    -webkit-appearance: none;
    /* Ugly Firefox way of doing it */
    
    -moz-appearance: window;
    text-indent: 0.01px;
    text-overflow: "";
 
    background: none;
    border: none;
   
    outline: none;
    /* Padding works surpringly well */
    
    padding: .4em 19% .4em .8em;
    font-family: helvetica, sans-serif;
    line-height: 1.2;
    margin: .2em;
}
/* This hides native dropdown button arrow in IE */

 select::-ms-expand {
    display: none;
}

/* Custom arrow - could be an image, SVG, icon font, etc. */

&:after {
    @include iconFont;
    background: none;
    color: #bbb;
    content: "\25BE";
    font-size: 1.5em;
    padding: 0;
    position: absolute;
    right: 0.4em;
    top: 0.2em;
    bottom: .3em;
    z-index: 1;
    /* This hack makes the select behind the arrow clickable in some browsers */
    
    pointer-events: none;
}

/* Focus style */

 select:focus {
    outline: none;

}
/* This hides focus around selected option in FF */

 select:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 #000;
}


}




// radio buttons --------------------------------



div:not(#foo)>#pageContent input[type='radio']{
    opacity:0;
    position:absolute;}
div:not(#foo)>#pageContent input[type='radio']+label span {
    clear:none;
    display:inline-block;
    cursor:pointer;
    width:$radioAndCheckboxSize;
    height:$radioAndCheckboxSize;
    border:1px solid #000;
    background:#fff;
    position:relative;
  -webkit-border-radius: $radioAndCheckboxSize;
  -moz-border-radius: $radioAndCheckboxSize;
  border-radius: $radioAndCheckboxSize;
margin-right: 0.5em;
}

div:not(#foo)>#pageContent input[type='radio']+label span:before {
    content: " ";
    width:($radioAndCheckboxSize*0.75);
    height:($radioAndCheckboxSize*0.75);
    background:$titleColour;
    display:block;
 -webkit-border-radius: $radioAndCheckboxSize;
  -moz-border-radius: $radioAndCheckboxSize;
  border-radius: $radioAndCheckboxSize;
  opacity: 0;
  left: ($radioAndCheckboxSize*0.125);
  top: ($radioAndCheckboxSize*0.125);
  position: absolute;
  @include transition(opacity 0.3s);
}



div:not(#foo)>#pageContent input[type='radio']:checked+label span:before {
opacity: 1;
}


@supports (transform: scale(1)) {
// enhance with scale if supported:
div:not(#foo)>#pageContent input[type='radio']+label span:before {
    opacity: 1;
 -ms-transform: scale(0); 
    -webkit-transform: scale(0); 
    transform: scale(0);
  @include transition(transform 0.3s);
    }

    div:not(#foo)>#pageContent input[type='radio']:checked+label span:before {
 -ms-transform: scale(1); 
    -webkit-transform: scale(1); 
    transform: scale(1);
}
}



// check boxes --------------------------------

div:not(#foo)>#pageContent input[type='checkbox']{
    opacity:0;
    position:absolute;}
div:not(#foo)>#pageContent input[type='checkbox']+label span {
    clear:none;
    display:inline-block;
    cursor:pointer;
       width:$radioAndCheckboxSize;
    height:$radioAndCheckboxSize;
    border:1px solid #000;
    background:#fff;
    position:relative;
    margin-right: 0.5em;
@include border-radius(4);
}

div:not(#foo)>#pageContent input[type='checkbox']+label span:before {
    content: '\2713';
 @include iconFont;
    color: $titleColour;
    line-height: 1;
    text-align: center;
  opacity: 0;
    @include transition(opacity 0.3s);
}
div:not(#foo)>#pageContent input[type='checkbox']:checked+label span:before {
opacity: 1;
}

@supports (transform: scale(1)) {
// enhance with scale if supported:
div:not(#foo)>#pageContent input[type='checkbox']+label span:before {
opacity: 1;
 -ms-transform: scale(0); 
    -webkit-transform: scale(0); 
    transform: scale(0);
  @include transition(transform 0.2s);position: absolute;
}

    div:not(#foo)>#pageContent input[type='checkbox']:checked+label span:before {
 -ms-transform: scale(1); 
    -webkit-transform: scale(1); 
    transform: scale(1);
}
}



// file inputs --------------------------------
// http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/
.js {
.fileInput {
    // hide the input visually but keeping it visible for the browser:
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
}

.fileInputLabel {


    color: #fff;
    cursor: pointer;
    background: #000;
    display: inline-block;
}

.fileInput:focus + label,
.fileInputLabel:hover {
    background-color: $titleColour
;
}

.fileInput:focus + label {
    // for keyboard browsing:
    outline: 1px dotted #fff;
    outline: -webkit-focus-ring-color auto 5px;
}

.inputfile + label span {
    pointer-events: none;
}

}