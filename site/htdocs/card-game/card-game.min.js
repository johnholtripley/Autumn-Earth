function uniqueValues(e){var r={};return e.filter(function(e){return r.hasOwnProperty(e)?!1:r[e]=!0})}function compareZIndex(e,r){return e.zIndex<r.zIndex?-1:e.zIndex>r.zIndex?1:0}function getRandomInteger(e,r){return Math.floor(Math.random()*(r-e+1))+e}function loadingProgress(){console.log("loading - "+Loader.getProgress())}function getCanvasPosition(){canvasElemCoords=document.getElementById("cardGame").getBoundingClientRect(),outerCanvasLeft=canvasElemCoords.left,outerCanvasTop=canvasElemCoords.top,outerCanvasWidth=canvasElemCoords.right-canvasElemCoords.left,outerCanvasHeight=canvasElemCoords.bottom-canvasElemCoords.top,pageLoadScroll=document.body.scrollTop+document.documentElement.scrollTop}function initCardGame(){getCanvasPosition(),gameCanvas=document.getElementById("cardGame"),gameCanvas.getContext&&(gameContext=gameCanvas.getContext("2d"),canvasWidth=gameCanvas.width,canvasHeight=gameCanvas.height),cards=[];for(var e=0;e<numberOfCardsInGame;e++)cards[e]={x:-100,y:-100,index:e,zIndex:0,flippedAnimation:0,isMovingToBoard:!1,originalOwner:e>=numberOfCardsInGame/2?2:1,hasBeenPlaced:!1,cardType:allCardsThisGame[e],currentOwner:e>=numberOfCardsInGame/2?2:1,draw:function(){offsetX=0,offsetY=0,this.flippedAnimation>0&&(randomAmount=4*this.flippedAnimation,offsetX=getRandomInteger(0,randomAmount),offsetY=getRandomInteger(0,randomAmount),this.flippedAnimation--,0==this.flippedAnimation&&(this.zIndex=0)),gameContext.fillStyle=playerColours[this.currentOwner],gameContext.fillRect(this.x+offsetX,this.y+offsetY,cardWidth,cardHeight),gameContext.drawImage(cardImages[this.cardType],this.x+offsetX,this.y+offsetY)}};cardImages=[];for(var e=1;numberOfCardTypes>=e;e++)cardImages[e]=Loader.getImage("card"+e);boardImage=Loader.getImage("board"),currentCardSelectedImage=Loader.getImage("selected"),currentCardSelected={draw:function(){-1!=currentlySelectedCard&&gameContext.drawImage(currentCardSelectedImage,cards[currentlySelectedCard].x-20,cards[currentlySelectedCard].y-20)}},currentPlayerMarkerImage=Loader.getImage("current"),currentPlayerMarker={xScale:1,increment:-.05,draw:function(){this.xScale+=this.increment,Math.abs(this.xScale)>1&&(this.increment*=-1),gameContext.save(),this.x=1==currentPlayersTurn?84:925,gameContext.translate(this.x,20),gameContext.scale(this.xScale,1),gameContext.drawImage(currentPlayerMarkerImage,0-currentPlayerMarkerImage.width/2,0),gameContext.restore()}},placeCardOnBoard(0,boardWidth/2-1,boardHeight/2-1,!0),placeCardOnBoard(1,boardWidth/2,boardHeight/2,!0),placeCardOnBoard(numberOfCardsInGame/2,boardWidth/2,boardHeight/2-1,!0),placeCardOnBoard(numberOfCardsInGame/2+1,boardWidth/2-1,boardHeight/2,!0);for(var r=2,a=numberOfCardsInGame/2+2,t=0;t<boardWidth;t++)for(var n=0;n<boardHeight;n++)"#"==board[n][t]?(placeCardOnBoard(r,t,n,!1),r++):"@"==board[n][t]&&(placeCardOnBoard(a,t,n,!1),a++);placedCards=4,currentPlayersTurn=getRandomInteger(1,2),currentlySelectedCard=-1,currentOpponent=1,isPlayer1AI=!0,whoCanClick=currentPlayersTurn,gameMode="play",aiIsWorking=-1,waitForDrawUpdate=!1,1==currentPlayersTurn&&(currentOpponent=2,isPlayer1AI&&doAIMove())}function placeCardOnBoard(e,r,a,t){board[a][r]=e,cards[e].x=r*cardWidth,cards[e].y=a*cardHeight,cards[e].hasBeenPlaced=t}function update(){waitForDrawUpdate&&(doAIMove(),waitForDrawUpdate=!1);for(var e=0;e<numberOfCardsInGame;e++)if(cards[e].isMovingToBoard){var r=cards[e].gridX*cardWidth,a=cards[e].gridY*cardHeight;if(cards[e].x-=.3*(cards[e].x-r),cards[e].y-=.3*(cards[e].y-a),Math.abs(cards[e].x-r)<10&&Math.abs(cards[e].y-a)<10){if(cards[e].isMovingToBoard=!1,cards[e].x=cards[e].gridX*cardWidth,cards[e].y=cards[e].gridY*cardHeight,cards[e].hasBeenPlaced=!0,cards[e].zIndex=0,checkAttacksInAllDirections(cards[e].gridX,cards[e].gridY,board,cards,currentOpponent,currentPlayersTurn,!1),placedCards++,placedCards==numberOfCardsInGame){gameMode="gameover";for(var t=0,n=0,o=0;o<numberOfCardsInGame;o++)1==cards[o].currentOwner?t++:n++;n>t?playerColours[1]="#665200":t>n&&(playerColours[2]="#660052"),draw()}var s=currentPlayersTurn;currentPlayersTurn=currentOpponent,currentOpponent=s,1==currentPlayersTurn&&isPlayer1AI&&(waitForDrawUpdate=!0)}}aiIsWorking>0&&(aiIsWorking++,aiIsWorking>36&&(aiIsWorking=-1,currentlySelectedCard=whichMoveToMake[1],cards[currentlySelectedCard].isMovingToBoard=!0,cards[currentlySelectedCard].gridX=whichMoveToMake[2],cards[currentlySelectedCard].gridY=whichMoveToMake[3],board[whichMoveToMake[3]][whichMoveToMake[2]]=currentlySelectedCard,cards[currentlySelectedCard].zIndex=1,currentlySelectedCard=-1,whoCanClick=2))}function draw(){gameContext.drawImage(boardImage,0,0);for(var e=cards.slice(),r=e.sort(compareZIndex),a=0;a<numberOfCardsInGame;a++)cards[r[a].index].draw();currentCardSelected.draw(),currentPlayerMarker.draw()}function isValidMove(e,r,a){for(var t=!1,n=e-1;e+1>=n;n++)for(var o=r-1;r+1>=o;o++)o>=0&&o<boardHeight&&(isNaN(a[o][n])||(t=!0));return t}function checkAttacksInAllDirections(e,r,a,t,n,o,s){checkAttack(e,r,-1,0,a,t,n,o,s),checkAttack(e,r,1,0,a,t,n,o,s),checkAttack(e,r,0,-1,a,t,n,o,s),checkAttack(e,r,0,1,a,t,n,o,s),checkAttack(e,r,-1,-1,a,t,n,o,s),checkAttack(e,r,1,1,a,t,n,o,s),checkAttack(e,r,-1,1,a,t,n,o,s),checkAttack(e,r,1,-1,a,t,n,o,s)}function checkAttack(e,r,a,t,n,o,s,d,c){var i=0,l=[],u=e+a,h=r+t;do{var m=!1;if(h>=0&&h<boardHeight){var g=n[h][u];if(!isNaN(g)&&o[g].currentOwner==s){m=!0,l.push(g);var f=o[g].cardType;i+=parseInt(allCardData[f][1]),u+=a,h+=t}}}while(m);var C=o[n[r][e]].cardType,p=parseInt(allCardData[C][0]);if(h>=0&&h<boardHeight&&!isNaN(n[h][u])&&o[n[h][u]].currentOwner==d){var v=o[n[h][u]].cardType,w=parseInt(allCardData[v][0]);if(p+w>=i)if(c){thisMovesScore+=l.length;for(var y=0;y<l.length;y++)o[l[y]].currentOwner=d}else for(var y=0;y<l.length;y++)flipCard(l[y],o,d)}}function flipCard(e,r,a){r[e].currentOwner=a,r[e].flippedAnimation=10,r[e].zIndex=1}function insertNewMove(e,r){return r.splice(locationOfBestScores(e,r)+1,0,e),r}function locationOfBestScores(e,r,a,t){a=a||0,t=t||r.length;var n=parseInt(a+(t-a)/2,10);return r[n][0]===e[0]?n:1>=t-a?r[n][0]<e[0]?n-1:n:r[n][0]>e[0]?locationOfBestScores(e,r,n,t):locationOfBestScores(e,r,a,n)}function findLowestScoreInGroup(){for(var e=99999,r=0;r<thisGroupsScore.length;r++){var a=cards[listOfPossibleBestMoves[thisGroupsScore[r]][1]].cardType,t=parseInt(allCardData[a][0])+parseInt(allCardData[a][1]);e>t&&(e=t)}for(var r=0;r<thisGroupsScore.length;r++){var a=cards[listOfPossibleBestMoves[thisGroupsScore[r]][1]].cardType,t=parseInt(allCardData[a][0])+parseInt(allCardData[a][1]);t!=e&&indexesToRemove.push(thisGroupsScore[r])}thisGroupsScore=[],thisGroupsScore.push(indexToCheck)}function doAIMove(){console.log("AI thinking..."),aiIsWorking=1,findBestMove(board,currentPlayersTurn,cards)}function findBestMove(e,r){whichOpponentCurrently=1==r?2:1,listOfPossibleBestMoves=[[-999999,-1,-1,-1]];for(var a=2,t=0,n=a;n<boardWidth-a;n++)for(var o=t;o<boardHeight-t;o++)if("-"==e[o][n]&&isValidMove(n,o,e))for(var s=[],d=0;d<numberOfCardsInGame;d++)if(1==cards[d].currentOwner&&!cards[d].hasBeenPlaced&&-1==s.indexOf(cards[d].cardType)){s.push(cards[d].cardType);for(var c=[],i=0;i<numberOfCardsInGame;i++)c[i]={index:cards[i].index,originalOwner:cards[i].originalOwner,hasBeenPlaced:cards[i].hasBeenPlaced,cardType:cards[i].cardType,currentOwner:cards[i].currentOwner};for(var l=[],u=0;u<e.length;u++)l[u]=e[u].slice();l[o][n]=d,c[d].hasBeenPlaced=!0,thisMovesScore=0,checkAttacksInAllDirections(n,o,l,c,whichOpponentCurrently,r,!0),AIScore=1.01*thisMovesScore,bestCounterMove=0,whichCounterPlayerCurrently=whichOpponentCurrently,whichCounterOpponentCurrently=r;for(var h=a;h<boardWidth-a;h++)for(var u=t;u<boardHeight-t;u++)if("-"==l[u][h]&&isValidMove(h,u,l))for(var m=[],g=0;g<numberOfCardsInGame;g++)if(2==c[g].currentOwner&&!c[g].hasBeenPlaced&&-1==m.indexOf(c[g].cardType)){m.push(c[g].cardType);for(var f=[],i=0;i<numberOfCardsInGame;i++)f[i]={index:c[i].index,originalOwner:c[i].originalOwner,hasBeenPlaced:c[i].hasBeenPlaced,cardType:c[i].cardType,currentOwner:c[i].currentOwner};for(var C=[],i=0;i<l.length;i++)C[i]=l[i].slice();C[u][h]=g,f[g].hasBeenPlaced=!0,thisMovesScore=0,checkAttacksInAllDirections(h,u,C,f,whichCounterOpponentCurrently,whichCounterPlayerCurrently,!0),thisMovesScore>bestCounterMove&&(bestCounterMove=thisMovesScore)}thisMovesScore=AIScore-bestCounterMove,listOfPossibleBestMoves=insertNewMove([thisMovesScore,d,n,o],listOfPossibleBestMoves),listOfPossibleBestMoves.length>10&&listOfPossibleBestMoves.pop()}-999999==listOfPossibleBestMoves[listOfPossibleBestMoves.length-1][0]&&listOfPossibleBestMoves.pop(),indexToCheck=0;var p=listOfPossibleBestMoves[indexToCheck][0];thisGroupsScore=[],indexesToRemove=[];do{var v=listOfPossibleBestMoves[indexToCheck][0];v==p?thisGroupsScore.push(indexToCheck):findLowestScoreInGroup(),p=v,indexToCheck++}while(indexToCheck<listOfPossibleBestMoves.length);thisGroupsScore.length==listOfPossibleBestMoves.length&&findLowestScoreInGroup();for(var w=indexesToRemove.length-1;w>=0;w--)listOfPossibleBestMoves.splice(indexesToRemove[w],1);var y=player2Skill,b=0;do if(b++,b==listOfPossibleBestMoves.length)break;while(listOfPossibleBestMoves[b][0]==listOfPossibleBestMoves[0][0]);b>y&&(y=b),y>listOfPossibleBestMoves.length&&(y=listOfPossibleBestMoves.length-1),whichMoveToMake=listOfPossibleBestMoves[Math.floor(Math.random()*y)]}function canvasClick(e){var r=e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft-outerCanvasLeft,a=e.clientY+document.body.scrollTop+document.documentElement.scrollTop-outerCanvasTop-pageLoadScroll;switch(gameMode){case"play":gridX=Math.floor(r/outerCanvasWidth*boardWidth),gridY=Math.floor(a/outerCanvasHeight*boardHeight);var t=board[gridY][gridX];if("-"==t)-1!=currentlySelectedCard&&isValidMove(gridX,gridY,board)&&(cards[currentlySelectedCard].isMovingToBoard=!0,cards[currentlySelectedCard].gridX=gridX,cards[currentlySelectedCard].gridY=gridY,board[gridY][gridX]=currentlySelectedCard,cards[currentlySelectedCard].zIndex=1,currentlySelectedCard=-1,whoCanClick=currentOpponent);else if("x"!=t){var n=!1;cards[t].hasBeenPlaced||cards[t].currentOwner==whoCanClick&&(n=!0),isPlayer1AI&&1==whoCanClick&&(n=!1),n&&(currentlySelectedCard=t)}}}function gameLoop(){setTimeout(function(){switch(window.requestAnimationFrame(gameLoop),gameMode){case"loading":console.log("loading...");break;case"play":update(),draw();break;case"gameover":console.log("game over")}},1e3/framesPerSecond)}if(framesPerSecond=24,playerColours=["","#ffcc00","#ff00cc"],cardWidth=84,cardHeight=102,allCardsThisGame=player1Cards.concat(player2Cards),numberOfCardsInGame=allCardsThisGame.length,board=[["#","#","x","x","x","-","-","x","x","x","x","x"],["#","#","x","x","-","-","-","-","x","x","@","@"],["#","#","x","-","-","-","-","-","-","x","@","@"],["#","#","x","-","-","-","-","-","-","x","@","@"],["#","#","x","x","-","-","-","-","x","x","@","@"],["x","x","x","x","x","-","-","x","x","x","@","@"]],boardWidth=board[0].length,boardHeight=board.length,function(){for(var e=0,r=["ms","moz","webkit","o"],a=0;a<r.length&&!window.requestAnimationFrame;++a)window.requestAnimationFrame=window[r[a]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[r[a]+"CancelAnimationFrame"]||window[r[a]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(r,a){var t=(new Date).getTime(),n=Math.max(0,16-(t-e)),o=window.setTimeout(function(){r(t+n)},n);return e=t+n,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}(),window.Loader=function(){function e(){}function r(){}function a(a){++c,e(d()),c==l&&(i=!1,r())}function t(e){console.log("Error on loading the image: "+e.srcElement)}function n(e,r){try{u[e]=new Image,u[e].onload=function(){a(e)},u[e].onerror=t,u[e].src=r}catch(n){console.log(n.message)}}function o(e){return u[e]?u[e]:void 0}function s(a,t,o){if(!i){i=!0;try{l=a.length,e=o||function(){},r=t||function(){};for(var s=0;s<a.length;++s)n(a[s].name,a[s].src)}catch(d){console.log(d.message)}}}function d(){return c/l*100}var c=0,i=!1,l=0,u={};return{preload:s,getProgress:d,getImage:o,images:u}}(),cutsTheMustard&&supportsCanvas()){allCardsToLoadThisGame=uniqueValues(allCardsThisGame);for(var numberOfCardTypes=allCardsToLoadThisGame.length,imagesToLoad=[{name:"board",src:"http://www.autumnearth.com/images/card-game/board.jpg"},{name:"selected",src:"http://www.autumnearth.com/images/card-game/selected-card.png"},{name:"current",src:"http://www.autumnearth.com/images/card-game/current-player.png"}],i=1;numberOfCardTypes>=i;i++)imagesToLoad.push({name:"card"+i,src:"http://www.autumnearth.com/images/card-game/cards/"+i+".png"});document.getElementById("cardGame").addEventListener("click",function(e){canvasClick(e),e&&e.preventDefault()},!1),canvasResizeHandler=debounce(function(){getCanvasPosition()},250),window.addEventListener("resize",canvasResizeHandler),gameMode="loading",gameLoop(),Loader.preload(imagesToLoad,initCardGame,loadingProgress)}