"use strict";function getRadiusFromHero(i,a){var e=herosTileX-i,t=herosTileY-a;return Math.sqrt(e*e+t*t)}function castLight(i,a,e,t,s,o,r){var n,h,l,g,p,f,c,T,M=0,d=!1;if(!(e>a))for(n=i;herosLineOfSightRange>=n;n++)if(!d)for(l=-n,h=-n;0>=h;h++)if(g=herosTileX+h*t+l*s,p=herosTileY+h*o+l*r,f=(h-.5)/(l+.5),c=(h+.5)/(l-.5),g>=0&&p>=0&&mapTilesX>g&&mapTilesY>p&&!(c>a)){if(e>f)break;if(getRadiusFromHero(h,l)<=herosLineOfSightRange&&(T=1-getRadiusFromHero(h,l)/herosLineOfSightRange,lightMap[g][p]=T),d){if(thisMapData.collisions[g][p]>=1){M=c;continue}d=!1,a=M}else thisMapData.collisions[g][p]>=1&&herosLineOfSightRange>n&&(d=!0,castLight(n+1,a,f,t,s,o,r),M=c)}}var thisMapData,mapTilesY,mapTilesX,herosTileX,herosTileY,herosLineOfSightRange,lightMap;const directionDiagonals=[[-1,-1],[1,-1],[-1,1],[1,1]];onmessage=function(i){thisMapData=i.data[0],herosTileX=i.data[1],herosTileY=i.data[2],herosLineOfSightRange=i.data[3],mapTilesY=thisMapData.terrain.length,mapTilesX=thisMapData.terrain[0].length,lightMap=[];for(var a=mapTilesY-1;a>=0;a--){for(var e=[],t=mapTilesX-1;t>=0;t--)e[t]=0;lightMap[a]=e}lightMap[herosTileX][herosTileY]=1;for(var s in directionDiagonals)castLight(1,1,0,0,directionDiagonals[s][0],directionDiagonals[s][1],0),castLight(1,1,0,directionDiagonals[s][0],0,0,directionDiagonals[s][1]);postMessage(lightMap)};