"use strict";function loadGlobalMapData(){getJSON("/data/world-map.json",function(a){worldMap=a.worldMap},function(a){loadGlobalMapData()})}self.importScripts("shared-worker-functions.min.js");var thisMapData,visibleMaps,mapTilesY,mapTilesX,thisAgentsIndex,uncheckedTiles,nodes,firstKey,isOverWorldMap,worldMap="";loadGlobalMapData();const tileW=48,worldMapTileLength=50;function isATerrainCollision(a,s){var i=getLocalCoordinatesX(a),e=getLocalCoordinatesX(s);if(isOverWorldMap){if(a<0||s<0||a>=worldMapTileLength*worldMap[0].length||s>=worldMapTileLength*worldMap.length)return 1}else if(i<0||e<0||i>=mapTilesX||e>=mapTilesY)return 1;var t=findMapNumberFromGlobalCoordinates(a,s);switch(thisMapData[t].collisions[e][i]){case 1:return 1;case"<":case">":case"^":case"v":case"d":default:return 0}}function addNode(a,s,i,e,t){if(!isATerrainCollision(s,i)){var l=Math.abs(s-e)+Math.abs(i-t),n=a.cost+1,p=n+l;if(void 0===nodes[s+"-"+i]){nodes[s+"-"+i]={x:s,y:i,parentX:a.x,parentY:a.y,cost:n,summedCost:p};for(var o=0;o<uncheckedTiles.length;o++)if(p<uncheckedTiles[o].summedCost){uncheckedTiles.splice(o,0,nodes[s+"-"+i]);break}o>=uncheckedTiles.length&&uncheckedTiles.push(nodes[s+"-"+i])}else n<nodes[s+"-"+i].cost&&(nodes[s+"-"+i].cost=p,nodes[s+"-"+i].summedCost=n,nodes[s+"-"+i].parentX=a.x,nodes[s+"-"+i].parentY=a.y)}}function findPath(a,s,i,e){uncheckedTiles=[];var t,l=Math.abs(a-i)+Math.abs(s-e);(nodes={})[a+"-"+s]={x:a,y:s,parentX:void 0,parentY:void 0,cost:0,summedCost:l},uncheckedTiles.push(nodes[a+"-"+s]);for(var n,p,o=!1,r=0;r<visibleMaps.length;r++){for(var h=0;h<thisMapData[visibleMaps[r]].npcs.length;h++)thisMapData[visibleMaps[r]].npcs.name!=thisAgentsIndex&&"-"==thisMapData[visibleMaps[r]].npcs[h].movement[thisMapData[visibleMaps[r]].npcs[h].movementIndex]&&thisMapData[visibleMaps[r]].npcs[h].isCollidable&&(thisMapData[visibleMaps[r]].npcs[h].tileX==i&&thisMapData[visibleMaps[r]].npcs[h].tileY==e||(n=getLocalCoordinatesX(thisMapData[visibleMaps[r]].npcs[h].tileX),p=getLocalCoordinatesY(thisMapData[visibleMaps[r]].npcs[h].tileY),thisMapData[visibleMaps[r]].collisions[p][n]=1));for(h=0;h<thisMapData[visibleMaps[r]].items.length;h++){if(n=getLocalCoordinatesX(thisMapData[visibleMaps[r]].items[h].tileX),p=getLocalCoordinatesY(thisMapData[visibleMaps[r]].items[h].tileY),thisMapData[visibleMaps[r]].items[h].tileX==i&&thisMapData[visibleMaps[r]].items[h].tileY==e||(thisMapData[visibleMaps[r]].collisions[p][n]=1),thisMapData[visibleMaps[r]].items[h].width>tileW)for(var M=1;M<thisMapData[visibleMaps[r]].items[h].width/tileW;M++)thisMapData[visibleMaps[r]].collisions[p][n+M]=1,thisMapData[visibleMaps[r]].collisions[p][n-M]=1;if(thisMapData[visibleMaps[r]].items[h].height>tileW)for(M=1;M<thisMapData[visibleMaps[r]].items[h].height/tileW;M++)thisMapData[visibleMaps[r]].collisions[p+M][n]=1,thisMapData[visibleMaps[r]].collisions[p-M][n]=1}if(void 0!==thisMapData[visibleMaps[r]].innerDoors)for(var h in thisMapData[visibleMaps[r]].innerDoors)thisMapData[visibleMaps[r]].innerDoors[h].isOpen||(n=getLocalCoordinatesX(thisMapData[visibleMaps[r]].innerDoors[h].tileX),p=getLocalCoordinatesY(thisMapData[visibleMaps[r]].innerDoors[h].tileY),thisMapData[visibleMaps[r]].collisions[p][n]=1)}do{if((t=uncheckedTiles.shift()).x==i&&t.y==e){o=!0;for(var d=[];void 0!==t.parentX;)d.unshift([t.parentX,t.parentY]),t=nodes[t.parentX+"-"+t.parentY];var c=[];for(h=1;h<d.length;h++)d[h][0]==d[h-1][0]?d[h][1]>d[h-1][1]?c.push("s"):c.push("n"):d[h][0]>d[h-1][0]?c.push("e"):c.push("w");c.push("pathEnd")}else addNode(t,t.x+1,t.y,i,e),addNode(t,t.x-1,t.y,i,e),addNode(t,t.x,t.y+1,i,e),addNode(t,t.x,t.y-1,i,e)}while(uncheckedTiles.length>0&&!o);return uncheckedTiles=null,thisMapData=null,visibleMaps=null,nodes=null,thisAgentsIndex=null,o?c:["-","pathEnd"]}onmessage=function(a){var s=a.data[0];if(Array.isArray(s)&&(s=a.data[0][0]),""!=worldMap)switch(s){case"tile":var i=a.data[1],e=a.data[2],t=a.data[3];for(firstKey in thisMapData=a.data[4],visibleMaps=a.data[5],isOverWorldMap=a.data[6],thisMapData)break;mapTilesY=thisMapData[firstKey].terrain.length,mapTilesX=thisMapData[firstKey].terrain[0].length,postMessage([t.name,findPath(t.tileX,t.tileY,i,e),i+"-"+e]);break;case"shop":var l;t=a.data[1];for(firstKey in thisMapData=a.data[2],visibleMaps=a.data[3],isOverWorldMap=a.data[4],thisMapData)break;mapTilesY=thisMapData[firstKey].terrain.length,mapTilesX=thisMapData[firstKey].terrain[0].length,thisAgentsIndex=t.name;for(var n=[],p=[],o=0;o<visibleMaps.length;o++)for(var r=0;r<thisMapData[visibleMaps[o]].npcs.length;r++)thisMapData[visibleMaps[o]].npcs[r].name!=thisAgentsIndex&&(l=thisMapData[visibleMaps[o]].npcs[r]).speech&&"shop"==l.speech[l.speechIndex][1]&&(n.push(r),p.push(visibleMaps[o]));if(n.length>0){var h,M;do{M=Math.floor(Math.random()*n.length),h=thisMapData[p[M]].npcs[n[M]].tileX+"-"+thisMapData[p[M]].npcs[n[M]].tileY}while(h==t.lastTargetDestination);postMessage([t.name,findPath(t.tileX,t.tileY,thisMapData[p[M]].npcs[n[M]].tileX,thisMapData[p[M]].npcs[n[M]].tileY),h])}else postMessage([t.name,["-","pathEnd"],""]);break;case"item":var d,c;t=a.data[1];for(firstKey in thisMapData=a.data[2],visibleMaps=a.data[3],isOverWorldMap=a.data[4],thisMapData)break;mapTilesY=thisMapData[firstKey].terrain.length,mapTilesX=thisMapData[firstKey].terrain[0].length;var v=1/0;for(o=0;o<visibleMaps.length;o++)for(r=0;r<thisMapData[visibleMaps[o]].items.length;r++)-1!=a.data[0][1].indexOf(thisMapData[visibleMaps[o]].items[r].type)&&(c=getPythagorasDistance(thisMapData[visibleMaps[o]].items[r].tileX,thisMapData[visibleMaps[o]].items[r].tileY,t.tileX,t.tileY))<v&&(v=c,d=[o,r]);if(v<1/0){var D=thisMapData[visibleMaps[d[0]]];postMessage([t.name,findPath(t.tileX,t.tileY,D.items[d[1]].tileX,D.items[d[1]].tileY)])}else postMessage([t.name,["-","pathEnd"],""]);break;case"petToHero":t=a.data[1];for(firstKey in thisMapData=a.data[2],visibleMaps=a.data[6],isOverWorldMap=a.data[7],thisAgentsIndex=-1,thisMapData)break;mapTilesY=thisMapData[firstKey].terrain.length,mapTilesX=thisMapData[firstKey].terrain[0].length,postMessage(["pet",a.data[5],findPath(t.tileX,t.tileY,a.data[3],a.data[4])]);break;case"npcFindFollowing":t=a.data[1];for(firstKey in thisMapData=a.data[2],visibleMaps=a.data[3],isOverWorldMap=a.data[4],thisMapData)break;mapTilesY=thisMapData[firstKey].terrain.length,mapTilesX=thisMapData[firstKey].terrain[0].length,thisAgentsIndex=t.name,postMessage([t.name,findPath(t.tileX,t.tileY,t.following.tileX,t.following.tileY)])}};