cardGameNameSpace={cardWidth:84,cardHeight:102,board:[],compareZIndex:function(a,e){return a.zIndex<e.zIndex?-1:a.zIndex>e.zIndex?1:0},initialiseCardGame:function(){cardGameNameSpace.board=[["#","#","x","x","x","-","-","x","x","x","x","x"],["#","#","x","x","-","-","-","-","x","x","@","@"],["#","#","x","-","-","-","-","-","-","x","@","@"],["#","#","x","-","-","-","-","-","-","x","@","@"],["#","#","x","x","-","-","-","-","x","x","@","@"],["x","x","x","x","x","-","-","x","x","x","@","@"]],cardGameNameSpace.boardWidth=cardGameNameSpace.board[0].length,cardGameNameSpace.boardHeight=cardGameNameSpace.board.length,cardGameNameSpace.playerColours=["","#ffcc00","#ff00cc"],cardGameNameSpace.allCardsThisGame=cardGameNameSpace.player1Cards.concat(cardGameNameSpace.player2Cards),cardGameNameSpace.numberOfCardsInGame=cardGameNameSpace.allCardsThisGame.length,cardGameNameSpace.allCardsToLoadThisGame=uniqueValues(cardGameNameSpace.allCardsThisGame),cardGameNameSpace.numberOfCardTypes=cardGameNameSpace.allCardsToLoadThisGame.length,"undefined"==typeof isCardGameANetworkGame&&(isCardGameANetworkGame=!1),cardGameNameSpace.imagesToLoad=[{name:"board",src:"/images/card-game/board.jpg"},{name:"selected",src:"/images/card-game/selected-card.png"},{name:"current",src:"/images/card-game/current-player.png"}];for(var a=0;a<cardGameNameSpace.numberOfCardTypes;a++)cardGameNameSpace.imagesToLoad.push({name:"card"+cardGameNameSpace.allCardsToLoadThisGame[a],src:"/images/card-game/cards/"+cardGameNameSpace.allCardsToLoadThisGame[a]+".png"});document.getElementById("cardGame").addEventListener("click",cardGameNameSpace.canvasClick,!1),cardGameNameSpace.gameMode="loading",Loader.preload(cardGameNameSpace.imagesToLoad,cardGameNameSpace.initCardGame,loadingProgress)},getCanvasPosition:function(){var a=document.getElementById("cardGame").getBoundingClientRect();cardGameNameSpace.outerCanvasLeft=a.left,cardGameNameSpace.outerCanvasTop=a.top,cardGameNameSpace.outerCanvasWidth=a.right-a.left,cardGameNameSpace.outerCanvasHeight=a.bottom-a.top,cardGameNameSpace.pageLoadScroll=document.body.scrollTop+document.documentElement.scrollTop},placeCardOnBoard:function(a,e,r,c){cardGameNameSpace.board[r][e]=a,cardGameNameSpace.cards[a].x=e*cardGameNameSpace.cardWidth,cardGameNameSpace.cards[a].y=r*cardGameNameSpace.cardHeight,cardGameNameSpace.cards[a].hasBeenPlaced=c},checkAttacksInAllDirections:function(a,e,r,c,m,d,t){cardGameNameSpace.checkAttack(a,e,-1,0,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,1,0,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,0,-1,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,0,1,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,-1,-1,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,1,1,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,-1,1,r,c,m,d,t),cardGameNameSpace.checkAttack(a,e,1,-1,r,c,m,d,t)},checkAttack:function(a,e,r,c,m,d,t,o,s){var n=0,p=[],i=a+r,S=e+c;do{var G=!1;if(S>=0&&S<cardGameNameSpace.boardHeight){var l=m[S][i];if(!isNaN(l)&&d[l].currentOwner==t){G=!0,p.push(l);var N=d[l].cardType;n+=parseInt(cardGameNameSpace.allCardData[N][1]),i+=r,S+=c}}}while(G);var h=d[m[e][a]].cardType;if(cardGameNameSpace.placedCardsAttack=parseInt(cardGameNameSpace.allCardData[h][0]),S>=0&&S<cardGameNameSpace.boardHeight&&!isNaN(m[S][i])&&d[m[S][i]].currentOwner==o){var u=d[m[S][i]].cardType,g=parseInt(cardGameNameSpace.allCardData[u][0]);if(cardGameNameSpace.placedCardsAttack+g>=n)if(s){thisMovesScore+=p.length;for(var C=0;C<p.length;C++)d[p[C]].currentOwner=o}else for(var C=0;C<p.length;C++)cardGameNameSpace.flipCard(p[C],d,o)}},flipCard:function(a,e,r){e[a].currentOwner=r,e[a].flippedAnimation=10,e[a].zIndex=1},canvasClick:function(a){a&&a.preventDefault();var e=a.clientX+document.body.scrollLeft+document.documentElement.scrollLeft-cardGameNameSpace.outerCanvasLeft,r=a.clientY+document.body.scrollTop+document.documentElement.scrollTop-cardGameNameSpace.outerCanvasTop-cardGameNameSpace.pageLoadScroll;switch(gameMode){case"play":case"cardGame":gridX=Math.floor(e/cardGameNameSpace.outerCanvasWidth*cardGameNameSpace.boardWidth),gridY=Math.floor(r/cardGameNameSpace.outerCanvasHeight*cardGameNameSpace.boardHeight);var c=cardGameNameSpace.board[gridY][gridX];if("-"==c)-1!=cardGameNameSpace.currentlySelectedCard&&cardGameNameSpace.isValidMove(gridX,gridY,cardGameNameSpace.board)&&(cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].isMovingToBoard=!0,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].gridX=gridX,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].gridY=gridY,cardGameNameSpace.board[gridY][gridX]=cardGameNameSpace.currentlySelectedCard,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].zIndex=1,cardGameNameSpace.currentlySelectedCard=-1,cardGameNameSpace.whoCanClick=cardGameNameSpace.currentOpponent);else if("x"!=c){var m=!1;cardGameNameSpace.cards[c].hasBeenPlaced||cardGameNameSpace.cards[c].currentOwner==cardGameNameSpace.whoCanClick&&(m=!0),cardGameNameSpace.isPlayer1AI&&1==cardGameNameSpace.whoCanClick&&(m=!1),m&&(cardGameNameSpace.currentlySelectedCard=c)}}},findBestMove:function(a,e){whichOpponentCurrently=1==e?2:1,listOfPossibleBestMoves=[[-999999,-1,-1,-1]];for(var r=2,c=0,m=r;m<cardGameNameSpace.boardWidth-r;m++)for(var d=c;d<cardGameNameSpace.boardHeight-c;d++)if("-"==a[d][m]&&cardGameNameSpace.isValidMove(m,d,a))for(var t=[],o=0;o<cardGameNameSpace.numberOfCardsInGame;o++)if(1==cardGameNameSpace.cards[o].currentOwner&&!cardGameNameSpace.cards[o].hasBeenPlaced&&-1==t.indexOf(cardGameNameSpace.cards[o].cardType)){t.push(cardGameNameSpace.cards[o].cardType);for(var s=[],n=0;n<cardGameNameSpace.numberOfCardsInGame;n++)s[n]={index:cardGameNameSpace.cards[n].index,originalOwner:cardGameNameSpace.cards[n].originalOwner,hasBeenPlaced:cardGameNameSpace.cards[n].hasBeenPlaced,cardType:cardGameNameSpace.cards[n].cardType,currentOwner:cardGameNameSpace.cards[n].currentOwner};for(var p=[],i=0;i<a.length;i++)p[i]=a[i].slice();p[d][m]=o,s[o].hasBeenPlaced=!0,thisMovesScore=0,cardGameNameSpace.checkAttacksInAllDirections(m,d,p,s,whichOpponentCurrently,e,!0),AIScore=1.01*thisMovesScore,bestCounterMove=0,bestCounterMovePositions=[],whichCounterPlayerCurrently=whichOpponentCurrently,whichCounterOpponentCurrently=e;for(var S=r;S<cardGameNameSpace.boardWidth-r;S++)for(var i=c;i<cardGameNameSpace.boardHeight-c;i++)if("-"==p[i][S]&&cardGameNameSpace.isValidMove(S,i,p))for(var G=[],l=0;l<cardGameNameSpace.numberOfCardsInGame;l++)if(2==s[l].currentOwner&&!s[l].hasBeenPlaced&&-1==G.indexOf(s[l].cardType)){G.push(s[l].cardType);for(var N=[],n=0;n<cardGameNameSpace.numberOfCardsInGame;n++)N[n]={index:s[n].index,originalOwner:s[n].originalOwner,hasBeenPlaced:s[n].hasBeenPlaced,cardType:s[n].cardType,currentOwner:s[n].currentOwner};for(var h=[],n=0;n<p.length;n++)h[n]=p[n].slice();h[i][S]=l,N[l].hasBeenPlaced=!0,thisMovesScore=0,cardGameNameSpace.checkAttacksInAllDirections(S,i,h,N,whichCounterOpponentCurrently,whichCounterPlayerCurrently,!0),thisMovesScore>bestCounterMove?(bestCounterMove=thisMovesScore,bestCounterMovePositions=[S+","+i]):thisMovesScore==bestCounterMove&&bestCounterMovePositions.push(S+","+i)}thisMovesScore=AIScore-bestCounterMove,listOfPossibleBestMoves=cardGameNameSpace.insertNewMove([thisMovesScore,o,m,d],listOfPossibleBestMoves),listOfPossibleBestMoves.length>10&&listOfPossibleBestMoves.pop()}-999999==listOfPossibleBestMoves[listOfPossibleBestMoves.length-1][0]&&listOfPossibleBestMoves.pop();for(var u=0;u<listOfPossibleBestMoves.length;u++){var g=listOfPossibleBestMoves[u][2]+","+listOfPossibleBestMoves[u][3];-1!=bestCounterMovePositions.indexOf(g)&&(listOfPossibleBestMoves[u][0]+=.001)}listOfPossibleBestMoves.sort(sortByHighestValue),indexToCheck=0;var C=listOfPossibleBestMoves[indexToCheck][0];cardGameNameSpace.thisGroupsScore=[],indexesToRemove=[];do{var f=listOfPossibleBestMoves[indexToCheck][0];f==C?cardGameNameSpace.thisGroupsScore.push(indexToCheck):cardGameNameSpace.findLowestScoreInGroup(),C=f,indexToCheck++}while(indexToCheck<listOfPossibleBestMoves.length);cardGameNameSpace.thisGroupsScore.length==listOfPossibleBestMoves.length&&cardGameNameSpace.findLowestScoreInGroup();for(var v=indexesToRemove.length-1;v>=0;v--)listOfPossibleBestMoves.splice(indexesToRemove[v],1);var y=cardGameNameSpace.player1Skill,b=0;do if(b++,b==listOfPossibleBestMoves.length)break;while(listOfPossibleBestMoves[b][0]==listOfPossibleBestMoves[0][0]);b>y&&(y=b),y>listOfPossibleBestMoves.length&&(y=listOfPossibleBestMoves.length-1),whichMoveToMake=listOfPossibleBestMoves[Math.floor(Math.random()*y)]},insertNewMove:function(a,e){return e.splice(cardGameNameSpace.locationOfBestScores(a,e)+1,0,a),e},locationOfBestScores:function(a,e,r,c){r=r||0,c=c||e.length;var m=parseInt(r+(c-r)/2,10);return e[m][0]===a[0]?m:1>=c-r?e[m][0]<a[0]?m-1:m:e[m][0]>a[0]?cardGameNameSpace.locationOfBestScores(a,e,m,c):cardGameNameSpace.locationOfBestScores(a,e,r,m)},findLowestScoreInGroup:function(){for(var a=99999,e=0;e<cardGameNameSpace.thisGroupsScore.length;e++){var r=cardGameNameSpace.cards[listOfPossibleBestMoves[cardGameNameSpace.thisGroupsScore[e]][1]].cardType,c=parseInt(cardGameNameSpace.allCardData[r][0])+parseInt(cardGameNameSpace.allCardData[r][1]);a>c&&(a=c)}for(var e=0;e<cardGameNameSpace.thisGroupsScore.length;e++){var r=cardGameNameSpace.cards[listOfPossibleBestMoves[cardGameNameSpace.thisGroupsScore[e]][1]].cardType,c=parseInt(cardGameNameSpace.allCardData[r][0])+parseInt(cardGameNameSpace.allCardData[r][1]);c!=a&&indexesToRemove.push(cardGameNameSpace.thisGroupsScore[e])}cardGameNameSpace.thisGroupsScore=[],cardGameNameSpace.thisGroupsScore.push(indexToCheck)},initCardGame:function(){cardGameNameSpace.getCanvasPosition(),cardGameNameSpace.gameCanvas=document.getElementById("cardGame"),cardGameNameSpace.gameCanvas.getContext&&(cardGameNameSpace.gameContext=cardGameNameSpace.gameCanvas.getContext("2d"),cardGameNameSpace.canvasWidth=cardGameNameSpace.gameCanvas.width,cardGameNameSpace.canvasHeight=cardGameNameSpace.gameCanvas.height),cardGameNameSpace.cards=[];for(var a=0;a<cardGameNameSpace.numberOfCardsInGame;a++)cardGameNameSpace.cards[a]={x:-100,y:-100,index:a,zIndex:0,flippedAnimation:0,isMovingToBoard:!1,originalOwner:a>=cardGameNameSpace.numberOfCardsInGame/2?2:1,hasBeenPlaced:!1,cardType:cardGameNameSpace.allCardsThisGame[a],currentOwner:a>=cardGameNameSpace.numberOfCardsInGame/2?2:1,draw:function(){offsetX=0,offsetY=0,this.flippedAnimation>0&&(randomAmount=4*this.flippedAnimation,offsetX=getRandomIntegerInclusive(0,randomAmount),offsetY=getRandomIntegerInclusive(0,randomAmount),this.flippedAnimation--,0==this.flippedAnimation&&(this.zIndex=0)),cardGameNameSpace.gameContext.fillStyle=cardGameNameSpace.playerColours[this.currentOwner],cardGameNameSpace.gameContext.fillRect(this.x+offsetX,this.y+offsetY,cardGameNameSpace.cardWidth,cardGameNameSpace.cardHeight),cardGameNameSpace.gameContext.drawImage(cardGameNameSpace.cardImages[this.cardType],this.x+offsetX,this.y+offsetY)}};cardGameNameSpace.cardImages=[];for(var a=0;a<cardGameNameSpace.numberOfCardTypes;a++)cardGameNameSpace.cardImages[cardGameNameSpace.allCardsToLoadThisGame[a]]=Loader.getImage("card"+cardGameNameSpace.allCardsToLoadThisGame[a]);cardGameNameSpace.boardImage=Loader.getImage("board"),cardGameNameSpace.currentCardSelectedImage=Loader.getImage("selected"),cardGameNameSpace.currentCardSelected={draw:function(){-1!=cardGameNameSpace.currentlySelectedCard&&cardGameNameSpace.gameContext.drawImage(cardGameNameSpace.currentCardSelectedImage,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].x-20,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].y-20)}},cardGameNameSpace.currentPlayerMarkerImage=Loader.getImage("current"),cardGameNameSpace.currentPlayerMarker={xScale:1,increment:-.05,draw:function(){this.xScale+=this.increment,Math.abs(this.xScale)>1&&(this.increment*=-1),cardGameNameSpace.gameContext.save(),this.x=1==cardGameNameSpace.currentPlayersTurn?84:925,cardGameNameSpace.gameContext.translate(this.x,20),cardGameNameSpace.gameContext.scale(this.xScale,1),cardGameNameSpace.gameContext.drawImage(cardGameNameSpace.currentPlayerMarkerImage,0-cardGameNameSpace.currentPlayerMarkerImage.width/2,0),cardGameNameSpace.gameContext.restore()}},cardGameNameSpace.placeCardOnBoard(0,cardGameNameSpace.boardWidth/2-1,cardGameNameSpace.boardHeight/2-1,!0),cardGameNameSpace.placeCardOnBoard(1,cardGameNameSpace.boardWidth/2,cardGameNameSpace.boardHeight/2,!0),cardGameNameSpace.placeCardOnBoard(cardGameNameSpace.numberOfCardsInGame/2,cardGameNameSpace.boardWidth/2,cardGameNameSpace.boardHeight/2-1,!0),cardGameNameSpace.placeCardOnBoard(cardGameNameSpace.numberOfCardsInGame/2+1,cardGameNameSpace.boardWidth/2-1,cardGameNameSpace.boardHeight/2,!0),cardGameNameSpace.player1CardIndexToPlace=2,cardGameNameSpace.player2CardIndexToPlace=cardGameNameSpace.numberOfCardsInGame/2+2;for(var e=0;e<cardGameNameSpace.boardWidth;e++)for(var r=0;r<cardGameNameSpace.boardHeight;r++)"#"==cardGameNameSpace.board[r][e]?(cardGameNameSpace.placeCardOnBoard(cardGameNameSpace.player1CardIndexToPlace,e,r,!1),cardGameNameSpace.player1CardIndexToPlace++):"@"==cardGameNameSpace.board[r][e]&&(cardGameNameSpace.placeCardOnBoard(cardGameNameSpace.player2CardIndexToPlace,e,r,!1),cardGameNameSpace.player2CardIndexToPlace++);cardGameNameSpace.placedCards=4,cardGameNameSpace.currentlySelectedCard=-1,cardGameNameSpace.currentOpponent=1,cardGameNameSpace.isPlayer1AI=!0,cardGameNameSpace.aiIsWorking=-1,cardGameNameSpace.waitForDrawUpdate=!1,isCardGameANetworkGame?cardGameNameSpace.isPlayer1AI=!1:(cardGameNameSpace.currentPlayersTurn=getRandomIntegerInclusive(1,2),cardGameNameSpace.whoCanClick=cardGameNameSpace.currentPlayersTurn,cardGameNameSpace.gameMode="play",gameMode="cardGame",1==cardGameNameSpace.currentPlayersTurn&&(cardGameNameSpace.currentOpponent=2,cardGameNameSpace.isPlayer1AI&&cardGameNameSpace.doAIMove()))},draw:function(){cardGameNameSpace.gameContext.drawImage(cardGameNameSpace.boardImage,0,0);for(var a=cardGameNameSpace.cards.slice(),e=a.sort(cardGameNameSpace.compareZIndex),r=0;r<cardGameNameSpace.numberOfCardsInGame;r++)cardGameNameSpace.cards[e[r].index].draw();cardGameNameSpace.currentCardSelected.draw(),cardGameNameSpace.currentPlayerMarker.draw()},isValidMove:function(a,e,r){for(var c=!1,m=a-1;a+1>=m;m++)for(var d=e-1;e+1>=d;d++)d>=0&&d<cardGameNameSpace.boardHeight&&(isNaN(r[d][m])||(c=!0));return c},update:function(){cardGameNameSpace.waitForDrawUpdate&&(cardGameNameSpace.doAIMove(),cardGameNameSpace.waitForDrawUpdate=!1);for(var a=0;a<cardGameNameSpace.numberOfCardsInGame;a++)if(cardGameNameSpace.cards[a].isMovingToBoard){var e=cardGameNameSpace.cards[a].gridX*cardGameNameSpace.cardWidth,r=cardGameNameSpace.cards[a].gridY*cardGameNameSpace.cardHeight;if(cardGameNameSpace.cards[a].x-=.3*(cardGameNameSpace.cards[a].x-e),cardGameNameSpace.cards[a].y-=.3*(cardGameNameSpace.cards[a].y-r),Math.abs(cardGameNameSpace.cards[a].x-e)<10&&Math.abs(cardGameNameSpace.cards[a].y-r)<10){if(cardGameNameSpace.cards[a].isMovingToBoard=!1,cardGameNameSpace.cards[a].x=cardGameNameSpace.cards[a].gridX*cardGameNameSpace.cardWidth,cardGameNameSpace.cards[a].y=cardGameNameSpace.cards[a].gridY*cardGameNameSpace.cardHeight,cardGameNameSpace.cards[a].hasBeenPlaced=!0,cardGameNameSpace.cards[a].zIndex=0,cardGameNameSpace.checkAttacksInAllDirections(cardGameNameSpace.cards[a].gridX,cardGameNameSpace.cards[a].gridY,cardGameNameSpace.board,cardGameNameSpace.cards,cardGameNameSpace.currentOpponent,cardGameNameSpace.currentPlayersTurn,!1),cardGameNameSpace.placedCards++,cardGameNameSpace.placedCards==cardGameNameSpace.numberOfCardsInGame){cardGameNameSpace.gameMode="gameover";for(var c=0,m=0,d=0;d<cardGameNameSpace.numberOfCardsInGame;d++)1==cardGameNameSpace.cards[d].currentOwner?c++:m++;m>c?(cardGameNameSpace.playerColours[1]="#665200",cardGamePlayer2Wins()):c>m?(cardGameNameSpace.playerColours[2]="#660052",cardGamePlayer1Wins()):cardGameIsDrawn(),cardGameNameSpace.draw()}cardGameNameSpace.oldCurrentPlayersTurn=cardGameNameSpace.currentPlayersTurn,cardGameNameSpace.currentPlayersTurn=cardGameNameSpace.currentOpponent,cardGameNameSpace.currentOpponent=cardGameNameSpace.oldCurrentPlayersTurn,1==cardGameNameSpace.currentPlayersTurn&&cardGameNameSpace.isPlayer1AI&&(cardGameNameSpace.waitForDrawUpdate=!0)}}cardGameNameSpace.aiIsWorking>0&&(cardGameNameSpace.aiIsWorking++,cardGameNameSpace.aiIsWorking>36&&(cardGameNameSpace.aiIsWorking=-1,cardGameNameSpace.currentlySelectedCard=whichMoveToMake[1],cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].isMovingToBoard=!0,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].gridX=whichMoveToMake[2],cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].gridY=whichMoveToMake[3],cardGameNameSpace.board[whichMoveToMake[3]][whichMoveToMake[2]]=cardGameNameSpace.currentlySelectedCard,cardGameNameSpace.cards[cardGameNameSpace.currentlySelectedCard].zIndex=1,cardGameNameSpace.currentlySelectedCard=-1,cardGameNameSpace.whoCanClick=2))},doAIMove:function(){cardGameNameSpace.aiIsWorking=1,cardGameNameSpace.findBestMove(cardGameNameSpace.board,cardGameNameSpace.currentPlayersTurn,cardGameNameSpace.cards)}};