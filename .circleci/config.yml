# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
jobs:
  install-node-example:
    docker:
      - image: circleci/node:12.6
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: latest
      - run: npm install
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run: npm install -D @percy/agent
      - run: npm install -D @percy/script
      - run: export PERCY_TOKEN=32a9003f138aebf163fad750a749ba6584c09b7367cf909b917cf839f8925d1d
      - run: npx percy exec -- node /tests/snapshots.js
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
  # add Percy orb
  agent: percy/agent@0.1.3
  # add Node orb
  node: circleci/node@2.0.1
  # https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-on-circleci
  # puppeteer: threetreeslight/puppeteer@0.1.2
  puppeteer: threetreeslight/puppeteer@0.1.2
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "test"
  test:
    jobs:
       - install-node-example






# version: 2.1
# orbs:
#   ruby: circleci/ruby@0.1.2
#   agent: percy/agent@0.1.3 

# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:2.6.3-stretch-node
#     executor: ruby/default
#     steps:
#       - checkout
#       - run:
#          name: install dependencies
#          command: 
#            npm install
#            npm install @percy/agent
#       - run:
#           name: run tests
#           command: 
#             npm run build
#             percy snapshot 
